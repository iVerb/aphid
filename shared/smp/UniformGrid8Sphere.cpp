/*
 *  UniformGrid8Sphere.cpp
 *  
 *
 *  Created by jian zhang on 8/2/17.
 *  Copyright 2017 __MyCompanyName__. All rights reserved.
 *
 */

#include "UniformGrid8Sphere.h"
#include <math/Vector3F.h>

namespace aphid {

namespace smp {

const int UniformGrid8Sphere::sNumSamples = 280;

const float UniformGrid8Sphere::sSamplePnts[][3] = {
 {-0.125, -0.375, -0.875 },  {0.125, -0.375, -0.875 },  {-0.375, -0.125, -0.875 },  {-0.125, -0.125, -0.875 },  {0.125, -0.125, -0.875 },  {0.375, -0.125, -0.875 },  {-0.375, 0.125, -0.875 },  {-0.125, 0.125, -0.875 },  {0.125, 0.125, -0.875 },  {0.375, 0.125, -0.875 },  {-0.125, 0.375, -0.875 },  {0.125, 0.375, -0.875 },  {-0.375, -0.625, -0.625 },  {-0.125, -0.625, -0.625 },  {0.125, -0.625, -0.625 },  {0.375, -0.625, -0.625 },  {-0.625, -0.375, -0.625 },  {-0.375, -0.375, -0.625 },  {-0.125, -0.375, -0.625 },  {0.125, -0.375, -0.625 },  {0.375, -0.375, -0.625 },  {0.625, -0.375, -0.625 },  {-0.625, -0.125, -0.625 },  {-0.375, -0.125, -0.625 },  {-0.125, -0.125, -0.625 },  {0.125, -0.125, -0.625 },  {0.375, -0.125, -0.625 },  {0.625, -0.125, -0.625 },  {-0.625, 0.125, -0.625 },  {-0.375, 0.125, -0.625 },  {-0.125, 0.125, -0.625 },  {0.125, 0.125, -0.625 },  {0.375, 0.125, -0.625 },  {0.625, 0.125, -0.625 },  {-0.625, 0.375, -0.625 },  {-0.375, 0.375, -0.625 },  {-0.125, 0.375, -0.625 },  {0.125, 0.375, -0.625 },  {0.375, 0.375, -0.625 },  {0.625, 0.375, -0.625 },  {-0.375, 0.625, -0.625 },  {-0.125, 0.625, -0.625 },  {0.125, 0.625, -0.625 },  {0.375, 0.625, -0.625 },  {-0.125, -0.875, -0.375 },  {0.125, -0.875, -0.375 },  {-0.625, -0.625, -0.375 },  {-0.375, -0.625, -0.375 },  {-0.125, -0.625, -0.375 },  {0.125, -0.625, -0.375 },  {0.375, -0.625, -0.375 },  {0.625, -0.625, -0.375 },  {-0.625, -0.375, -0.375 },  {-0.375, -0.375, -0.375 },  {-0.125, -0.375, -0.375 },  {0.125, -0.375, -0.375 },  {0.375, -0.375, -0.375 },  {0.625, -0.375, -0.375 },  {-0.875, -0.125, -0.375 },  {-0.625, -0.125, -0.375 },  {-0.375, -0.125, -0.375 },  {-0.125, -0.125, -0.375 },  {0.125, -0.125, -0.375 },  {0.375, -0.125, -0.375 }, 
 {0.625, -0.125, -0.375 },  {0.875, -0.125, -0.375 },  {-0.875, 0.125, -0.375 },  {-0.625, 0.125, -0.375 },  {-0.375, 0.125, -0.375 },  {-0.125, 0.125, -0.375 },  {0.125, 0.125, -0.375 },  {0.375, 0.125, -0.375 },  {0.625, 0.125, -0.375 },  {0.875, 0.125, -0.375 },  {-0.625, 0.375, -0.375 },  {-0.375, 0.375, -0.375 },  {-0.125, 0.375, -0.375 },  {0.125, 0.375, -0.375 },  {0.375, 0.375, -0.375 },  {0.625, 0.375, -0.375 },  {-0.625, 0.625, -0.375 },  {-0.375, 0.625, -0.375 },  {-0.125, 0.625, -0.375 },  {0.125, 0.625, -0.375 },  {0.375, 0.625, -0.375 },  {0.625, 0.625, -0.375 },  {-0.125, 0.875, -0.375 },  {0.125, 0.875, -0.375 },  {-0.375, -0.875, -0.125 },  {-0.125, -0.875, -0.125 },  {0.125, -0.875, -0.125 },  {0.375, -0.875, -0.125 },  {-0.625, -0.625, -0.125 },  {-0.375, -0.625, -0.125 },  {-0.125, -0.625, -0.125 },  {0.125, -0.625, -0.125 },  {0.375, -0.625, -0.125 },  {0.625, -0.625, -0.125 },  {-0.875, -0.375, -0.125 },  {-0.625, -0.375, -0.125 },  {-0.375, -0.375, -0.125 },  {-0.125, -0.375, -0.125 },  {0.125, -0.375, -0.125 },  {0.375, -0.375, -0.125 },  {0.625, -0.375, -0.125 },  {0.875, -0.375, -0.125 },  {-0.875, -0.125, -0.125 },  {-0.625, -0.125, -0.125 },  {-0.375, -0.125, -0.125 },  {-0.125, -0.125, -0.125 },  {0.125, -0.125, -0.125 },  {0.375, -0.125, -0.125 },  {0.625, -0.125, -0.125 },  {0.875, -0.125, -0.125 },  {-0.875, 0.125, -0.125 },  {-0.625, 0.125, -0.125 },  {-0.375, 0.125, -0.125 },  {-0.125, 0.125, -0.125 },  {0.125, 0.125, -0.125 },  {0.375, 0.125, -0.125 },  {0.625, 0.125, -0.125 },  {0.875, 0.125, -0.125 },  {-0.875, 0.375, -0.125 },  {-0.625, 0.375, -0.125 },  {-0.375, 0.375, -0.125 },  {-0.125, 0.375, -0.125 },  {0.125, 0.375, -0.125 },  {0.375, 0.375, -0.125 }, 
 {0.625, 0.375, -0.125 },  {0.875, 0.375, -0.125 },  {-0.625, 0.625, -0.125 },  {-0.375, 0.625, -0.125 },  {-0.125, 0.625, -0.125 },  {0.125, 0.625, -0.125 },  {0.375, 0.625, -0.125 },  {0.625, 0.625, -0.125 },  {-0.375, 0.875, -0.125 },  {-0.125, 0.875, -0.125 },  {0.125, 0.875, -0.125 },  {0.375, 0.875, -0.125 },  {-0.375, -0.875, 0.125 },  {-0.125, -0.875, 0.125 },  {0.125, -0.875, 0.125 },  {0.375, -0.875, 0.125 },  {-0.625, -0.625, 0.125 },  {-0.375, -0.625, 0.125 },  {-0.125, -0.625, 0.125 },  {0.125, -0.625, 0.125 },  {0.375, -0.625, 0.125 },  {0.625, -0.625, 0.125 },  {-0.875, -0.375, 0.125 },  {-0.625, -0.375, 0.125 },  {-0.375, -0.375, 0.125 },  {-0.125, -0.375, 0.125 },  {0.125, -0.375, 0.125 },  {0.375, -0.375, 0.125 },  {0.625, -0.375, 0.125 },  {0.875, -0.375, 0.125 },  {-0.875, -0.125, 0.125 },  {-0.625, -0.125, 0.125 },  {-0.375, -0.125, 0.125 },  {-0.125, -0.125, 0.125 },  {0.125, -0.125, 0.125 },  {0.375, -0.125, 0.125 },  {0.625, -0.125, 0.125 },  {0.875, -0.125, 0.125 },  {-0.875, 0.125, 0.125 },  {-0.625, 0.125, 0.125 },  {-0.375, 0.125, 0.125 },  {-0.125, 0.125, 0.125 },  {0.125, 0.125, 0.125 },  {0.375, 0.125, 0.125 },  {0.625, 0.125, 0.125 },  {0.875, 0.125, 0.125 },  {-0.875, 0.375, 0.125 },  {-0.625, 0.375, 0.125 },  {-0.375, 0.375, 0.125 },  {-0.125, 0.375, 0.125 },  {0.125, 0.375, 0.125 },  {0.375, 0.375, 0.125 },  {0.625, 0.375, 0.125 },  {0.875, 0.375, 0.125 },  {-0.625, 0.625, 0.125 },  {-0.375, 0.625, 0.125 },  {-0.125, 0.625, 0.125 },  {0.125, 0.625, 0.125 },  {0.375, 0.625, 0.125 },  {0.625, 0.625, 0.125 },  {-0.375, 0.875, 0.125 },  {-0.125, 0.875, 0.125 },  {0.125, 0.875, 0.125 },  {0.375, 0.875, 0.125 }, 
 {-0.125, -0.875, 0.375 },  {0.125, -0.875, 0.375 },  {-0.625, -0.625, 0.375 },  {-0.375, -0.625, 0.375 },  {-0.125, -0.625, 0.375 },  {0.125, -0.625, 0.375 },  {0.375, -0.625, 0.375 },  {0.625, -0.625, 0.375 },  {-0.625, -0.375, 0.375 },  {-0.375, -0.375, 0.375 },  {-0.125, -0.375, 0.375 },  {0.125, -0.375, 0.375 },  {0.375, -0.375, 0.375 },  {0.625, -0.375, 0.375 },  {-0.875, -0.125, 0.375 },  {-0.625, -0.125, 0.375 },  {-0.375, -0.125, 0.375 },  {-0.125, -0.125, 0.375 },  {0.125, -0.125, 0.375 },  {0.375, -0.125, 0.375 },  {0.625, -0.125, 0.375 },  {0.875, -0.125, 0.375 },  {-0.875, 0.125, 0.375 },  {-0.625, 0.125, 0.375 },  {-0.375, 0.125, 0.375 },  {-0.125, 0.125, 0.375 },  {0.125, 0.125, 0.375 },  {0.375, 0.125, 0.375 },  {0.625, 0.125, 0.375 },  {0.875, 0.125, 0.375 },  {-0.625, 0.375, 0.375 },  {-0.375, 0.375, 0.375 },  {-0.125, 0.375, 0.375 },  {0.125, 0.375, 0.375 },  {0.375, 0.375, 0.375 },  {0.625, 0.375, 0.375 },  {-0.625, 0.625, 0.375 },  {-0.375, 0.625, 0.375 },  {-0.125, 0.625, 0.375 },  {0.125, 0.625, 0.375 },  {0.375, 0.625, 0.375 },  {0.625, 0.625, 0.375 },  {-0.125, 0.875, 0.375 },  {0.125, 0.875, 0.375 },  {-0.375, -0.625, 0.625 },  {-0.125, -0.625, 0.625 },  {0.125, -0.625, 0.625 },  {0.375, -0.625, 0.625 },  {-0.625, -0.375, 0.625 },  {-0.375, -0.375, 0.625 },  {-0.125, -0.375, 0.625 },  {0.125, -0.375, 0.625 },  {0.375, -0.375, 0.625 },  {0.625, -0.375, 0.625 },  {-0.625, -0.125, 0.625 },  {-0.375, -0.125, 0.625 },  {-0.125, -0.125, 0.625 },  {0.125, -0.125, 0.625 },  {0.375, -0.125, 0.625 },  {0.625, -0.125, 0.625 },  {-0.625, 0.125, 0.625 },  {-0.375, 0.125, 0.625 },  {-0.125, 0.125, 0.625 },  {0.125, 0.125, 0.625 }, 
 {0.375, 0.125, 0.625 },  {0.625, 0.125, 0.625 },  {-0.625, 0.375, 0.625 },  {-0.375, 0.375, 0.625 },  {-0.125, 0.375, 0.625 },  {0.125, 0.375, 0.625 },  {0.375, 0.375, 0.625 },  {0.625, 0.375, 0.625 },  {-0.375, 0.625, 0.625 },  {-0.125, 0.625, 0.625 },  {0.125, 0.625, 0.625 },  {0.375, 0.625, 0.625 },  {-0.125, -0.375, 0.875 },  {0.125, -0.375, 0.875 },  {-0.375, -0.125, 0.875 },  {-0.125, -0.125, 0.875 },  {0.125, -0.125, 0.875 },  {0.375, -0.125, 0.875 },  {-0.375, 0.125, 0.875 },  {-0.125, 0.125, 0.875 },  {0.125, 0.125, 0.875 },  {0.375, 0.125, 0.875 },  {-0.125, 0.375, 0.875 },  {0.125, 0.375, 0.875 } 
 };
 
const int UniformGrid8Sphere::sGridToSampleTable[] = {
 53, 12, 12, 13, 14, 15, 15, 56, 16, 17, 17, 18, 19, 20, 20, 21, 16, 17, 17, 0, 1, 20, 20, 21, 22, 23, 2, 3, 4, 5, 26, 27, 28, 29, 6, 7, 8, 9, 32, 33, 34, 35, 35, 10, 11, 38, 38, 39, 34, 35, 35, 36, 37, 38, 38, 39, 75, 40, 40, 41, 42, 43, 43, 78,
 46, 47, 47, 48, 49, 50, 50, 51, 52, 53, 12, 13, 14, 15, 56, 57, 52, 16, 17, 18, 19, 20, 21, 57, 59, 22, 23, 24, 25, 26, 27, 64, 67, 28, 29, 30, 31, 32, 33, 72, 74, 34, 35, 36, 37, 38, 39, 79, 74, 75, 40, 41, 42, 43, 78, 79, 80, 81, 81, 82, 83, 84, 84, 85,
 46, 47, 47, 44, 45, 50, 50, 51, 52, 46, 47, 48, 49, 50, 51, 57, 52, 52, 53, 54, 55, 56, 57, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 74, 75, 76, 77, 78, 79, 79, 74, 80, 81, 82, 83, 84, 85, 79, 80, 81, 81, 86, 87, 84, 84, 85,
 92, 93, 88, 89, 90, 91, 96, 97, 99, 92, 93, 94, 95, 96, 97, 104, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 123, 130, 131, 132, 133, 134, 135, 128, 130, 131, 136, 137, 138, 139, 134, 135,
 144, 145, 140, 141, 142, 143, 148, 149, 151, 144, 145, 146, 147, 148, 149, 156, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 175, 182, 183, 184, 185, 186, 187, 180, 182, 183, 188, 189, 190, 191, 186, 187,
 194, 195, 195, 192, 193, 198, 198, 199, 200, 194, 195, 196, 197, 198, 199, 205, 200, 200, 201, 202, 203, 204, 205, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 222, 223, 224, 225, 226, 227, 227, 222, 228, 229, 230, 231, 232, 233, 227, 228, 229, 229, 234, 235, 232, 232, 233,
 194, 195, 195, 196, 197, 198, 198, 199, 200, 201, 236, 237, 238, 239, 204, 205, 200, 240, 241, 242, 243, 244, 245, 205, 207, 246, 247, 248, 249, 250, 251, 212, 215, 252, 253, 254, 255, 256, 257, 220, 222, 258, 259, 260, 261, 262, 263, 227, 222, 223, 264, 265, 266, 267, 226, 227, 228, 229, 229, 230, 231, 232, 232, 233,
 201, 236, 236, 237, 238, 239, 239, 204, 240, 241, 241, 242, 243, 244, 244, 245, 240, 241, 241, 268, 269, 244, 244, 245, 246, 247, 270, 271, 272, 273, 250, 251, 252, 253, 274, 275, 276, 277, 256, 257, 258, 259, 259, 278, 279, 262, 262, 263, 258, 259, 259, 260, 261, 262, 262, 263, 223, 264, 264, 265, 266, 267, 267, 226
};
 
const float UniformGrid8Sphere::sCellSize = .25f;
 
UniformGrid8Sphere::UniformGrid8Sphere()
{}

UniformGrid8Sphere::~UniformGrid8Sphere()
{}

int UniformGrid8Sphere::GetSampleInd(const Vector3F& pv)
{
	int coord[3];
	GetSampleCoord(coord, pv);
	return sGridToSampleTable[coord[2] * 64 + coord[1] * 8 + coord[0]];
}

Vector3F UniformGrid8Sphere::GetSamplePnt(const Vector3F& pv)
{
	return Vector3F(sSamplePnts[GetSampleInd(pv)]);
}

void UniformGrid8Sphere::GetSampleCoord(int* dst, const Vector3F& pv)
{
	int& ix = dst[0];
	int& iy = dst[1];
	int& iz = dst[2];
	
	ix = 4 + pv.x * 4.f;
	if(ix > 7) ix = 7;
	if(ix < 0) ix = 0;
	
	iy = 4 + pv.y * 4.f;
	if(iy > 7) iy = 7;
	if(iy < 0) iy = 0;
	
	iz = 4 + pv.z * 4.f;
	if(iz > 7) iz = 7;
	if(iz < 0) iz = 0;
}

}
}

